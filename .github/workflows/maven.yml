name: Test Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:

    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: testdb
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

      mongo:
        image: mongo:4.4
        ports:
          - 27017:27017
        options: >-
          --health-cmd="mongo --eval 'db.runCommand({ ping: 1 })'"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: Wait for MySQL to be ready
      run: |
        for i in {30..0}; do
          if mysqladmin ping -h"127.0.0.1" --silent; then
            break
          fi
          echo 'MySQL not ready yet...'
          sleep 1
        done

    - name: Wait for MongoDB to be ready
      run: |
        for i in {30..0}; do
          if mongo --eval 'db.runCommand({ ping: 1 })'; then
            break
          fi
          echo 'MongoDB not ready yet...'
          sleep 1
        done

    - name: Run tests for message-sql module
      env:
        SPRING_DATASOURCE_URL: jdbc:mysql://127.0.0.1:3306/testdb
        SPRING_DATASOURCE_USERNAME: root
        SPRING_DATASOURCE_PASSWORD: root
      run: mvn -B test --file pom.xml -pl message-sql

    - name: Run tests for message-mongo module
      env:
        SPRING_DATA_MONGODB_URI: mongodb://127.0.0.1:27017/testdb
      run: mvn -B test --file pom.xml -pl message-mongo